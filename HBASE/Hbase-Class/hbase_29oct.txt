https://docs.google.com/document/d/177QrIGkyp2-ARAtbKjUazP5n0gNl_Nn0G0J56yPDWfY/edit


Hbase table

Create ‘test_flight_delays’,’dims’,’measures’

Hive table

CREATE EXTERNAL TABLE IF not exists hbase_flight_delays
(key string,
carrier string,
distance int
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES
("hbase.columns.mapping"=":key,dims:carrier,measures:distance")
TBLPROPERTIES("hbase.table.name"="test_flight_delays")
;

Hive stage table

CREATE EXTERNAL TABLE IF not exists hbase_stg_flight_delays
(key string,
carrier string,
distance int
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
;


Create a file in cloudera.

Vi testdata_hbase.CSV
1, ‘hyd’,25000
2, ‘blr’, 30000



Loading the data into a stage table.

Load data local inpath ‘/home/cloudera/testdata_hbase.CSV’ into table hbase_stg_flight_delays;


Insert the data from stage table to main hive table

insert into table hbase_flght_delays select * from hbase_stg_flight_delays;


Select * from hbase_flight_delays


Put the data into the hbase table.

Put ‘test_flight_delays’ , ‘5’, ‘dims:carrier’, ‘mycarfromhbase’


###Assignment
sales .csv

#Already create a schema in Hive 

Create a schema in hive(storage handler)


Create a column family in hbase

—----------------------------------------------------------------------------

#CSV file Load to hdfs #Create 

hdfs direcotry hdfs dfs -mkdir /files
hdfs dfs -mkdir /files/sales_data 

#Transfer from local to hdfs
hdfs dfs -put sales_order_data.csv /files/sales_data/

 #HBASE Part 

#Create hbase table create
 'sales_order_data_hbase','orderDetail','orderTime','productDetail','customerDetail'

 #HIVE Part 

#Create staging table from csv 

create external table if not exists sales_order_data_staging_hive (ORDERNUMBER int, QUANTITYORDERED int, PRICEEACH decimal(10,5),ORDERLINENUMBER int, SALES decimal(10,5),STATUS string,QTR_ID int, MONTH_ID int, YEAR_ID int,PRODUCTLINE string, MSRP int,PRODUCTCODE string,PHONE string,CITY string,STATE string,POSTALCODE string,COUNTRY string,TERRITORY string,CONTACTLASTNAME string,CONTACTFIRSTNAME string,DEALSIZE string)row format delimitedfields terminated by ','location '/files/sales_data'TBLPROPERTIES ("skip.header.line.count"="1"); 

#Create main table that is linked with hbase create external table if not exists sales_order_data_hive (KEY struct<ORDERNUMBER:int,PRODUCTCODE:string>,ORDERNUMBER int, QUANTITYORDERED int, PRICEEACH decimal(10,5),ORDERLINENUMBER int, SALES decimal(10,5),STATUS string,QTR_ID int, MONTH_ID int, YEAR_ID int,PRODUCTLINE string, MSRP int,PRODUCTCODE string,PHONE string,CITY string,STATE string,POSTALCODE string,COUNTRY string,TERRITORY string,CONTACTLASTNAME string,CONTACTFIRSTNAME string,DEALSIZE string)STORED BY "org.apache.hadoop.hive.hbase.HBaseStorageHandler" WITH SERDEPROPERTIES("hbase.columns.mapping"=":key,orderDetail:ORDERNUMBER,orderDetail:quantity,orderDetail:priceEach,orderDetail:orderLineNumber,orderDetail:sales,orderDetail:status,orderTime:quarter,orderTime:month,orderTime:year,productDetail:productLine,productDetail:msrp,productDetail:productCode,customerDetail:phone,customerDetail:city,customerDetail:state,customerDetail:postalcode,customerDetail:country,customerDetail:territory,customerDetail:lastName,customerDetail:firstName,orderDetail:dealSize")TBLPROPERTIES ("hbase.table.name" = "sales_order_data_hbase"); #Insert data from staging to main table insert into sales_order_data_hive select named_struct('ORDERNUMBER',ORDERNUMBER,'PRODUCTCODE',PRODUCTCODE),ORDERNUMBER,QUANTITYORDERED, PRICEEACH,ORDERLINENUMBER, SALES,STATUS,QTR_ID, MONTH_ID, YEAR_ID,PRODUCTLINE, MSRP,PRODUCTCODE,PHONE,CITY ,STATE ,POSTALCODE ,COUNTRY ,TERRITORY ,CONTACTLASTNAME ,CONTACTFIRSTNAME ,DEALSIZE from sales_order_data_staging_hive; 
